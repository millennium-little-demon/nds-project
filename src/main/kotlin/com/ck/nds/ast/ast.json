{
  "type": "ProgramAst",
  "body": [
    {
      "type": "NamespaceAst",
      "namespace": "com.ck.mapper.UserInfoMapper"
    },
    {
      "type": "FragmentAst",
      "fragmentName": "all_field",
      "fragmentList": [
        {
          "type": "SqlAst",
          "sql": "select"
        },
        {
          "type": "SqlAst",
          "sql": "*"
        },
        {
          "type": "SqlAst",
          "sql": "from"
        },
        {
          "type": "SqlAst",
          "sql": "user_info"
        }
      ]
    },
    {
      "type": "MappingAst",
      "mappingName": "selectUserInfoByName",
      "body": [
        {
          "type": "MetadataStatementAst",
          "metadataInfo": [
            {
              "type": "MetadataInfoAst",
              "metadataKey": "$abc",
              "metadataVal": "31"
            }
          ]
        },
        {
          "type": "FragmentRefAst",
          "fragmentRefName": "all_field"
        },
        {
          "type": "IfStatementAst",
          "test": {
            "type": "AndCallFunctionAst",
            "paramVariable": "&userName",
            "funcName": "test",
            "paramList": []
          },
          "consequent": [
            {
              "type": "SqlAst",
              "sql": "where"
            },
            {
              "type": "SqlAst",
              "sql": "user_name"
            },
            {
              "type": "SqlAst",
              "sql": "="
            },
            {
              "type": "ParamVariableAst",
              "varName": ":userName"
            }
          ]
        },
        {
          "type": "WhenStatementAst",
          "ifStatementAst": [
            {
              "type": "IfStatementAst",
              "test": {
                "type": "Expression",
                "operator": "==",
                "left": {
                  "type": "AndCallFunctionAst",
                  "paramVariable": "&userName",
                  "funcName": "test",
                  "paramList": []
                },
                "right": {
                  "type": "NumberAst",
                  "value": 1
                }
              },
              "consequent": [
                {
                  "type": "SqlAst",
                  "sql": "and"
                },
                {
                  "type": "SqlAst",
                  "sql": "user_mame"
                },
                {
                  "type": "SqlAst",
                  "sql": "="
                },
                {
                  "type": "SqlAst",
                  "sql": "abc"
                }
              ]
            }
          ],
          "elseStatementAst": [
            {
              "type": "StringAst",
              "value": "aaa"
            }
          ]
        }
      ]
    }
  ]
}
